import numpy as np
from scipy import optimize as opt

def f(a, v, m1, m2):
    a * m1 + v

a = np.array([[4, 3, 2, -1, 1, -1, 4, -1, 2, 5],
              [3, -1, -1, 1, 0, 1, 3, 3, 1, -1],
              [3, -1, -1, 3, 2, 3, -1, 5, 1, 4],
              [-1, -1, 1, 2, 0, 2, -1, 5, -1, 4],
              [-1, 5, -1, -1, -1, 3, -1, 6, 2, -1],
              [3, -1, 5, -1, 2, -1, 7, 5, 1, 4],
              [-1, 3, -1, 1, 1, 1, 4, -1, 0, 1],
              [4, -1, 2, 3, -1, 3, -1, 5, 2, 5],
             [2, -1, -1, -1, 0, 0, 4, 2, 0, -1],
             [2, 1, 0, 1, 0, 1, -1, -1, -1, -1]])
vg = np.zeros(36)

H = 1 / 2**0.5 * np.array([[1, 1], [1, -1]])
ro = np.array([[0.5, 0], [0, 0.5]])
k0 = np.array([1, 0]).T
a0 = np.matmul(H, k0)
vsp = np.matmul(np.conj(a0), ro)
print(np.matmul(vsp, a0))
